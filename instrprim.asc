add - reg0, reg1, des
addi - reg, imm5, des
and - reg0, reg1, des
bit  - reg, imm6
cmp - reg0, reg1
cmps - reg0, reg1
decode - reg, des, imm5
div - reg0, greg1, des0, des1
exit
fadd - freg'0, freg'1, fdes'
fdiv
fmul
frk
fsub
if - imm2, imm2
io
li - des, imm8'
lw - des, [reg], imm5
mask - imm6, des
mff - freg
mov - reg, des
mtf - fdes
mul  - reg0, greg1, des0, des1
not - reg, des
or  - reg0, reg1, des
sl
sra
srl
sub  - reg0, reg1, des
subi - reg, imm5, des
sw  - reg, [reg], imm5
xor
